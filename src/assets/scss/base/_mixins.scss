$s: 360px;
$xs: 425px;
$sm: 576px;
$md: 744px;
//$lg: 1024px;
$lg: 1200px;
$xl: 1700px;
$hd: 1920px;

@mixin breakpoint($point) {
    @if $point==s {
        @media (min-width: $s) {
            @content ;
        }
    }

    @else if $point==xs {
        @media (min-width: $xs) {
            @content ;
        }
    }

    @else if $point==sm {
        @media (min-width: $sm) {
            @content ;
        }
    }

    @else if $point==md {
        @media (min-width: $md) {
            @content ;
        }
    }

    @else if $point==lg {
        @media (min-width: $lg) {
            @content ;
        }
    }

    @else if $point==bg {
        @media (min-width: $bg) {
            @content ;
        }
    }

    @else if $point==xl {
        @media (min-width: $xl) {
            @content ;
        }
    }

    @else if $point==hd {
        @media (min-width: $hd) {
            @content ;
        }
    }
}

@mixin breakpointMax($point) {
    @if $point==s {
        @media (max-width: $s - 1px) {
            @content ;
        }
    }

    @else if $point==xs {
        @media (max-width: $xs - 1px) {
            @content ;
        }
    }

    @else if $point==sm {
        @media (max-width: $sm - 1px) {
            @content ;
        }
    }

    @else if $point==md {
        @media (max-width: $md - 1px) {
            @content ;
        }
    }

    @else if $point==lg {
        @media (max-width: $lg - 1px) {
            @content ;
        }
    }

    @else if $point==bg {
        @media (max-width: $bg - 1px) {
            @content ;
        }
    }

    @else if $point==xl {
        @media (max-width: $xl - 1px) {
            @content ;
        }
    }

    @else if $point==hd {
        @media (max-width: $hd - 1px) {
            @content ;
        }
    }
}

@mixin breakpointCustom($point) {
    @media (min-width: $point) {
        @content ;
    }
}

@mixin breakpointMaxCustom($point) {
    @media (max-width: $point - 1px) {
        @content ;
    }
}

@mixin textLimit($val) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $val;
    line-clamp: $val;
    -webkit-box-orient: vertical;
}

@mixin ratio($width, $height) {
    padding-bottom: calc($height * 100% / $width);
}

@mixin ratio50($width, $height) {
    padding-bottom: calc($height * 50% / $width);
    height: 0;
    overflow: hidden;
}

@mixin scale($width, $height, $minus, $col) {
    height: calc(((100vw - $minus) / $col) / ($width / $height));
}

@mixin flexCenterCenter {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flexAlignCenter {
    display: flex;
    align-items: center;
}

@mixin flexCenterBetween {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flexColumn {
    display: flex;
    flex-direction: column;
}
@mixin flexRow {
    display: flex;
    flex-direction: row;
}

@mixin backgroundParams {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
}

@mixin iconWithBG {
    width: 48px;
    height: 48px;
    padding: 12px;
    background: $grey-2;
    border-radius: 10px;
    transition: $transition;

    &:hover {
        background: $grey-3;
    }
}


@mixin columCountWidth($count) {
    width: calc((100vw - var(--container) * 2) / 12 * $count);
}
@mixin columCountMaxWidth($count) {
    max-width: calc((100vw - var(--container) * 2) / 12 * $count);
}

@mixin columnXlWidth($count) {
    width: calc(var(--container-max-width) / 12 * $count);
}

@mixin overlay {
    content: '';
    display: block;
    position: fixed;
    background-color: #00000066;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin gridRowColumns($rowCount, $columnCount) {
    display: grid;
    grid-template-rows: repeat($rowCount, 1fr);
    grid-template-columns: repeat($columnCount, 1fr);
}


